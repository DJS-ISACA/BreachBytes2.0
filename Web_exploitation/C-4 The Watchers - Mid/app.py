from flask import Flask, render_template, request, redirect, make_response, jsonify
import jwt
import sys

app = Flask(__name__)
app.config['SECRET_KEY'] = 'fsociety'

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/enroll-phase', methods=['GET', 'HEAD'])
def enroll_phase():
    if request.method == 'HEAD':
        response = make_response('')
        response.headers['X-Next-Phase'] = '/short-letter-Xk9pLm'
        return response

    user_agent = request.headers.get('User-Agent')
    auth_token = request.cookies.get('Auth-token')

    if auth_token == 'ea00cc4c12a00a67481ee4d077deaca3':
        return render_template('enroll-phase3.html')
    elif user_agent == 'the-watcher':
        return render_template('enroll-phase2.html')
    else:
        return render_template('enroll-phase1.html')

@app.route('/short-letter-Xk9pLm')
def short_letter():
    response = make_response(render_template('short-letter.html'))
    response.headers['X-Hint'] = 'https://www.cs.du.edu/~snarayan'
    return response

@app.route('/contact', methods=['GET', 'POST'])
def contact():
    if request.method == 'POST':
        email = request.form.get('email')
        if email == 'teamlead171@thewatcher.org':
            error = "You're good. Finally meet me at /7EaU85FEwafew"
            return render_template('contact.html', error=error)
        else:
            error = "No Watcher Member associated with that email"
            return render_template('contact.html', error=error)
    return render_template('contact.html')

@app.route('/7EaU85FEwafew', methods=['GET', 'POST'])
def final_part():
    def create_response(token, id=''):
        response = make_response(render_template('final-part.html', token=token, id=id))
        response.set_cookie('jwt_token', token, httponly=True)
        return response

    def create_token():
        return jwt.encode({'Is-The-Watcher': False}, app.config['SECRET_KEY'], algorithm='HS256')

    if request.method == 'GET':
        return create_response(create_token())

    token = request.cookies.get('jwt_token')
    if not token:
        return create_response(create_token(), 'Not Quite Yet XD')
    try:
        decoded = jwt.decode(token, app.config['SECRET_KEY'], algorithms=['HS256'])
        if decoded['Is-The-Watcher']:
            return render_template('final-part.html', token=token, id='DJSISACA{sample_flag}')
        else:
            return create_response(create_token(), 'Not Quite Yet XD')
    except Exception:
        return create_response(create_token(), 'Not Quite Yet XD')

if __name__ == '__main__':
    app.run(debug=True, port=5004, host='0.0.0.0')