from flask import Flask, render_template, request, redirect, url_for, session, abort, jsonify
import json
import uuid
import secrets
import string
import sys

app = Flask(__name__)
app.secret_key = secrets.token_hex(16)

def load_users():
    try:
        with open('users.json', 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        return []

def save_users(users):
    with open('users.json', 'w') as f:
        json.dump(users, f, indent=2)

def get_user(username=None, guid=None):
    users = load_users()
    if username:
        return next((user for user in users if user['username'] == username), None)
    elif guid:
        return next((user for user in users if user['guid'] == guid), None)
    return None

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        user = get_user(username=username)
        if user and user['password'] == password:
            session['username'] = username
            return redirect(url_for('home'))
        else:
            return render_template('login.html', error='Invalid username or password')
    return render_template('login.html')

@app.route('/signup', methods=['GET', 'POST'])
def signup():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        
        users = load_users()
        if any(user['username'] == username for user in users):
            return render_template('signup.html', error='Username already exists')
        
        new_user = {
            'username': username,
            'password': password,
            'balance': 1000.0,
            'guid': str(uuid.uuid4()),
            'product': 1001.0,
            'coupon': None
        }
        users.append(new_user)
        save_users(users)
        return redirect(url_for('login'))
    return render_template('signup.html')

@app.route('/')
def home():
    if 'username' not in session:
        return redirect(url_for('login'))
    user = get_user(username=session['username'])
    if user:
        return render_template('checkout.html', user=user, price=user['product'])
    return redirect(url_for('login'))

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

@app.route('/flag')
def flag():
    if 'username' not in session:
        return redirect(url_for('login'))
    
    user = get_user(username=session['username'])
    
    if user:
        product_price = user['product']
        balance = user['balance']
        
        if user.get('coupon') and user['coupon'].strip() == 'SUP3RC3LL_4DM1N_100%_0FF':
            product_price = 0

        if balance < product_price:
            return render_template('checkout.html', user=user, price=product_price, message='Not enough balance. Please add funds to your account.')
        
        try:
            users = load_users()
            users = [u for u in users if u['username'] != session['username']]
            save_users(users)
        except Exception as e:
            return f"Error updating users: {e}", 500
        
        return render_template('flag.html')
    
    return redirect(url_for('login'))

@app.route('/profile')
def profile():
    if 'username' not in session:
        return redirect(url_for('login'))
    user = get_user(username=session['username'])
    if user:
        return redirect(url_for('profile_with_guid', guid=user['guid']))
    return redirect(url_for('login'))

@app.route('/profile/<guid>')
def profile_with_guid(guid):
    if 'username' not in session:
        return redirect(url_for('login'))
    user = get_user(guid=guid)
    if user:
        return render_template('profile.html', user=user, coupon=user.get('coupon'))
    abort(404)

@app.route('/apply_coupon', methods=['POST'])
def apply_coupon():
    if 'username' not in session:
        return redirect(url_for('login'))
    
    coupon_code = request.form.get('coupon_code')
    user = get_user(username=session['username'])
    
    if user:
        if coupon_code == 'SUP3RC3LL_4DM1N_100%_0FF':
            user['coupon'] = coupon_code
            users = load_users()
            for u in users:
                if u['username'] == user['username']:
                    u['coupon'] = coupon_code
                    break
            save_users(users)
            price = 0
        else:
            price = user['product']
        return render_template('checkout.html', user=user, price=price, message=f'Applied coupon code: {coupon_code}')
    
    return redirect(url_for('login'))

if __name__ == '__main__':
    app.run(debug=True, port=5002, host='0.0.0.0')